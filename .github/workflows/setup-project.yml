name: Automated Project Setup
on:
  push:
    branches:
      - main

jobs:
  staging:
    name: Add staging branch
    if: |
      github.event_name == 'push' &&
      !contains(github.repository, 'template') &&
      contains(github.event.head_commit.message, 'Initial commit')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Commit changes
        run: |
          git config --global user.name template-bot
          git config --global user.email 'bot@bit-production.com'
          git branch -m staging
          git push origin -u staging

  changelog:
    name: Remove Template Changelog
    if: |
      github.event_name == 'push' &&
      !contains(github.repository, 'template') &&
      contains(github.event.head_commit.message, 'Initial commit')
    runs-on: ubuntu-latest
    needs: staging
    steps:
      - uses: actions/checkout@v2
        with:
          ref: staging

      - name: Remove Template Changelog
        run: echo "" > CHANGELOG.md

      - name: Commit changes
        run: |
          git config --global user.name template-bot
          git config --global user.email 'bot@bit-production.com'
          git commit -am "chore: Remove Template Changelog [skip ci]"
          git push

  initialSetup:
    name: Remove this file
    if: |
      github.event_name == 'push' &&
      !contains(github.repository, 'template') &&
      contains(github.event.head_commit.message, 'Initial commit')
    runs-on: ubuntu-latest
    needs: changelog
    steps:
      - uses: actions/checkout@v2
        with:
          ref: staging

      - name: Commit changes
        run: |
          git config --global user.name template-bot
          git config --global user.email 'bot@bit-production.com'
          git rm .github/workflows/setup-project.yml
          git commit -am "chore: remove setup project file [skip ci]"
          git pull
          git push

  package:
    name: Update package.json
    if: |
      github.event_name == 'push' &&
      !contains(github.repository, 'template') &&
      contains(github.event.head_commit.message, 'Initial commit')
    runs-on: ubuntu-latest
    needs: initialSetup
    steps:
      - uses: actions/checkout@v2
        with:
          ref: staging

      - name: Update package.json name
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: name
          value: ${{ github.event.repository.name }}

      - name: Update package.json repository
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: repository
          value: git@github.com:${{ github.repository }}

      - name: get project description
        uses: indiesdev/curl@v1
        id: repo-info
        with:
          url: https://api.github.com/repos/${{ github.repository }}
          method: GET
          accept: 200
          headers: '{"Content-Type":"application/json","accept":"application/vnd.github.v3+json","Authorization": "token ${{ secrets.GITHUB_TOKEN }}"}'
          timeout: 5000

      - name: Update package.json description
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: description
          value: ${{ fromJson(steps.repo-info.outputs.response).data.description }}

      - name: Update package.json homepage
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: homepage
          value: ${{ fromJson(steps.repo-info.outputs.response).data.html_url }}

      - name: Update package.json bugs
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: bugs
          value: ${{ fromJson(steps.repo-info.outputs.response).data.html_url }}/issues

      - name: Commit changes
        run: |
          git config --global user.name template-bot
          git config --global user.email 'bot@bit-production.com'
          git commit -am "chore: Update package.json [skip ci]"
          git pull
          git push

  todos:
    name: Create issue with remaining tasks
    if: |
      github.event_name == 'push' &&
      !contains(github.repository, 'template') &&
      contains(github.event.head_commit.message, 'Initial commit')
    runs-on: ubuntu-latest
    steps:
      - name: Publish Issue what is todo
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          route: POST /repos/:repository/issues
          repository:  ${{ github.repository }}
          title: Initial setup TODOs
          body: |
            |
            # To complete setting up this project you have to do some more work!
            ## Server
            - [ ] Setup production server
            - [ ] Setup staging server
            ## Sentry
            - [ ] Add this repository to the organization (Settings > Your Organisation > Integrations > GitHub)
            ## GitHub
            ### Settings
            - [ ] disable allow_squash_merge
            - [ ] disable allow_rebase_merge
            - [ ] enable delete_branch_on_merge
            - [ ] create a branch protection for `main`
            - [ ] create a branch protection for `staging`
            ### Secrets
            - [ ] add SENTRY_PROJECT secret (e.g. `${{ github.event.repository.name }}`)
            - [ ] add DEPLOY_URL_PRODUCTION secret
            - [ ] add DEPLOY_URL_STAGING secret
            #### Optional if not set by organization
            - [ ] add DEPLOY_PRIVATE_KEY secret
            - [ ] add SENTRY_AUTH_TOKEN secret
            - [ ] add SENTRY_ORG secret
            ## Project
            - [ ] update `src/pages/_app.tsx` -> DC.title
            - [ ] update `src/pages/_app.tsx` -> author
            - [ ] update `src/pages/_app.tsx` -> generator
            - [ ] update `src/pages/_document.tsx` -> theme-color
            ## Material UI (optional)
            - [ ] if yout want to use it, merge the branch `use/material-ui`
            - [ ] update `src/theme.ts` -> primary color
            ## Google Analytics (optional)
            - [ ] if yout want to use it, merge the branch `use/google-analytics`
            - [ ] update `.env.production` -> NEXT_PUBLIC_GA_TRACKING_ID
            ## Auth0 (optional)
            - [ ] if yout want to use it, merge the branch `use/auth0`
            - [ ] create auth0 client
            - [ ] add secrets to staging and production server: `AUTH0_DOMAIN`, `AUTH0_AUDIENCE`, `AUTH0_REDIRECT_URL`, `AUTH0_LOGOUT_REDIRECT_URL`, `AUTH0_COOKIE_SECRET`, `AUTH0_CLIENT_ID`, `AUTH0_CLIENT_SECRET`

  sentry:
    name: Create Sentry Project
    if: |
      github.event_name == 'push' &&
      !contains(github.repository, 'template') &&
      contains(github.event.head_commit.message, 'Initial commit')
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: package
    steps:
      - uses: actions/checkout@v2
        with:
          ref: staging

      - name: create project
        uses: indiesdev/curl@v1
        if: ${{ success() }}
        with:
          url: https://sentry.io/api/0/teams/${{ secrets.SENTRY_ORG }}/web/projects/
          method: POST
          accept: 201
          headers: '{"Content-Type":"application/json"}'
          bearer-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          body: '{"name":"${{ github.event.repository.name }}","slug":"${{ github.event.repository.name }}"}'
          timeout: 5000

      - name: set project platform
        uses: indiesdev/curl@v1
        if: ${{ success() }}
        with:
          url: https://sentry.io/api/0/projects/${{ secrets.SENTRY_ORG }}/${{ github.event.repository.name }}/
          method: PUT
          accept: 200
          headers: '{"Content-Type":"application/json"}'
          bearer-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          body: '{"platform":"node"}'
          timeout: 5000

      - name: get sentry dsn
        uses: indiesdev/curl@v1
        if: ${{ success() }}
        id: sentry-dsn
        with:
          url: https://sentry.io/api/0/projects/${{ secrets.SENTRY_ORG }}/${{ github.event.repository.name }}/keys/
          method: GET
          accept: 200
          headers: '{"Content-Type":"application/json"}'
          bearer-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          timeout: 5000

      - name: write sentry dsn
        if: ${{ success() }}
        run: echo NEXT_PUBLIC_SENTRY_DSN=${{ fromJson(steps.sentry-dsn.outputs.response).data[0].dsn.public }} > .env.production

      - name: Commit changes
        if: ${{ success() }}
        run: |
          git config --global user.name template-bot
          git config --global user.email 'bot@bit-production.com'
          git commit -am "chore: Add Sentry DSN token [skip ci]"
          git pull
          git push

      - name: Publish Issue that sentry setup failed
        uses: octokit/request-action@v2.x
        if: ${{ failure() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          route: POST /repos/:repository/issues
          repository:  ${{ github.repository }}
          title: Complete Sentry setup
          body: |
            |
            # An error occurred while setting up Sentry
            It seems that their occurred an error while setting up sentry. Therefore you have to spent more time by doing the following tasks

            - [ ] create project ${{ github.event.repository.name }} with platform `node`
            - [ ] write sentry dsn as env `NEXT_PUBLIC_SENTRY_DSN` to file `.env.production`