name: Release Staging
on:
  push:
    branches:
      - staging

jobs:
  release:
    name: Release Staging
    if: |
      !(github.event_name == 'push' && contains(github.event.head_commit.message, '[skip ci]')) &&
      !contains(github.repository, 'template') &&
      !contains(github.event.head_commit.message, 'Initial commit')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache nextJS
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Release
        run: yarn release
        env:
          RELEASE: release
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          REPOSITORY: ${{ github.repository }}
          SENTRY_ENV: staging

  deploy:
    name: Deploy Staging
    if: |
      !(github.event_name == 'push' && contains(github.event.head_commit.message, '[skip ci]')) &&
      !contains(github.repository, 'template') &&
      !contains(github.event.head_commit.message, 'Initial commit')
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Dokku deploy
        uses: AlexanderBabel/dokku-github-action@master
        env:
          PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          URL: ${{ secrets.DEPLOY_URL_STAGING }}
